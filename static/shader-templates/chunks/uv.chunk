

CCProgram shader_graph_uv %{

    vec2 polarCoordinates (vec2 uv, vec2 center, float radialScale, float lengthScale) {
        vec2 delta = uv - center;
        float radius = length(delta) * 2. * radialScale;
        float angle = atan(delta.y, delta.x) * 1.0/6.28 * lengthScale;
        return vec2(radius, angle);
    }

    vec2 rotateCoordinates (vec2 uv, vec2 center, float rotation) {
        //rotation matrix
        uv -= center;
        float s = sin(rotation);
        float c = cos(rotation);

        //center rotation matrix
        mat2 rMatrix = mat2(c, -s, s, c);
        rMatrix *= 0.5;
        rMatrix += 0.5;
        rMatrix = rMatrix*2. - 1.;

        //multiply the UVs by the rotation matrix
        uv *= rMatrix;
        uv += center;

        return uv;
    }

}%
